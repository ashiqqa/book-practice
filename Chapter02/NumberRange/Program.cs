using System;
using static System.Console;
namespace NumberRange
{
    class Program
    {
        static void Main(string[] args)
        {
            WriteLine("______________________________________________________________________________________________________________________________________");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","Type","Byte of Memory","MIN","MAX");
            WriteLine("______________________________________________________________________________________________________________________________________");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","sbyte",sizeof(sbyte),sbyte.MinValue,sbyte.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","byte",sizeof(byte),byte.MinValue,byte.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","short",sizeof(short),short.MinValue,short.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","ushort",sizeof(ushort),ushort.MinValue,ushort.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","int",sizeof(int),int.MinValue,int.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","uint",sizeof(uint),uint.MinValue,uint.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","float",sizeof(float),float.MinValue,float.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","long",sizeof(long),long.MinValue,long.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","ulong",sizeof(ulong),ulong.MinValue,ulong.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","double",sizeof(double),double.MinValue,double.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            WriteLine(format:"{0,-10} {1,15} {2,35} {3,35}","decimal",sizeof(decimal),decimal.MinValue,decimal.MaxValue);
            WriteLine("-------------------------------------------------------------------------------------------------------------------------------------");
            
            ReadKey();
        }
    }
}
